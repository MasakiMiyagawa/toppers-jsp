/*
 *  TOPPERS/JSP Kernel
 *      Toyohashi Open Platform for Embedded Real-Time Systems/
 *      Just Standard Profile Kernel
 * 
 *  Copyright (C) 2000-2003 by Embedded and Real-Time Systems Laboratory
 *                              Toyohashi Univ. of Technology, JAPAN
 * 
 *  上記著作権者は，以下の (1)〜(4) の条件か，Free Software Foundation 
 *  によって公表されている GNU General Public License の Version 2 に記
 *  述されている条件を満たす場合に限り，本ソフトウェア（本ソフトウェア
 *  を改変したものを含む．以下同じ）を使用・複製・改変・再配布（以下，
 *  利用と呼ぶ）することを無償で許諾する．
 *  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *      スコード中に含まれていること．
 *  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
 *      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
 *      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
 *      の無保証規定を掲載すること．
 *  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
 *      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
 *      と．
 *    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
 *        作権表示，この利用条件および下記の無保証規定を掲載すること．
 *    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
 *        報告すること．
 *  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
 * 
 *  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 *  よびTOPPERSプロジェクトは，本ソフトウェアに関して，その適用可能性も
 *  含めて，いかなる保証も行わない．また，本ソフトウェアの利用により直
 *  接的または間接的に生じたいかなる損害に関しても，その責任を負わない．
 * 
 */

/*
 *      カーネル用のスタートアップモジュール（Xstormy16用）
 */

#define _MACRO_ONLY
#include <cpu_sfrs.h>

/*
 *  機種情報(sys_support.S)をリンクするため
 */
        .equ dummy,_chip_info

/*
 *  割り込みベクトル
 *  (このsectionは8000h-8083hにリンクされる)
 */
        .section .int_vec,"ax"
        .global _start
        .align 1
_start:
        jmpf _int_reset
        jmpf _kernel_int_irq_1
        jmpf _kernel_int_irq_2
        jmpf _kernel_int_irq_3
        jmpf _kernel_int_irq_4
        jmpf _kernel_int_irq_5
        jmpf _kernel_int_irq_6
        jmpf _kernel_int_irq_7
        jmpf _kernel_int_irq_8
        jmpf _kernel_int_irq_9
        jmpf _kernel_int_irq_a
        jmpf _kernel_int_irq_b
        jmpf _kernel_int_irq_c
        jmpf _kernel_int_irq_d
        jmpf _kernel_int_irq_e
        jmpf _kernel_int_irq_f
        .org 0x80
        jmpf _kernel_int_irq_ex

/*
 *      RESET時の初期化処理
 */
        .text
_int_reset:

                                /*
                                 *  ワッチドッグタイマ割り込みのチェック
                                 */
        bn __WDTCR,#4,_after_reset
        bp __WDTCR,#5,_after_reset
        jmpf _kernel_int_irq_0
_after_reset:

                                /*
                                 *  スタックポインタの初期化
                                 */
        mov sp,#__stack

                                /*
                                 *  初期値なしの変数域のゼロクリア
                                 */
        mov r0,#_edata
        mov r1,#_end
        mov r2,#0
1:      mov.w (r0++),r2
        blt r0,r1,1b

                                /*
                                 *  初期値ありの変数域の初期値設定
                                 */
        mov r1,#__data
        mov r3,#_edata
        mov r0,#@lo(__rdata)
        mov r8,#@hi(__rdata)
2:      movf.w r2,(r0++)
        bnz r0,#0,3f
        add r8,#1
3:      mov.w (r1++),r2
        blt r1,r3,2b

                                /*
                                 *  初期化ルーチンの呼び出し
                                 */
        callf _init

                                /*
                                 *  カーネルの起動
                                 */
        jmpf kernel_start

        .end
