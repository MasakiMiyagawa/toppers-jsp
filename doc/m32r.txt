
           ＝ TOPPERS/JSPカーネル ユーザズマニュアル ＝
                     (三菱電機 M32R プロセッサ)
                      三菱電機製 : M3A-2131G50

           （Release 1.3 対応，最終更新: 06-Apr-2002）

------------------------------------------------------------------------ 
 TOPPERS/JSP Kernel
     Toyohashi Open Platform for Embedded Real-Time Systems/
     Just Standard Profile Kernel

 Copyright (C) 2000-2002 by Embedded and Real-Time Systems Laboratory
                             Toyohashi Univ. of Technology, JAPAN


 上記著作権者は，Free Software Foundation によって公表されている 
 GNU General Public License の Version 2 に記述されている条件か，以
 下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェア（本ソフトウェ
 アを改変したものを含む．以下同じ）を使用・複製・改変・再配布（以下，
 利用と呼ぶ）することを無償で許諾する．
 (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
     権表示，この利用条件および下記の無保証規定が，そのままの形でソー
     スコード中に含まれていること．
 (2) 本ソフトウェアを再利用可能なバイナリコード（リロケータブルオブ
     ジェクトファイルやライブラリなど）の形で利用する場合には，利用
     に伴うドキュメント（利用者マニュアルなど）に，上記の著作権表示，
     この利用条件および下記の無保証規定を掲載すること．
 (3) 本ソフトウェアを再利用不可能なバイナリコードの形または機器に組
     み込んだ形で利用する場合には，次のいずれかの条件を満たすこと．
   (a) 利用に伴うドキュメント（利用者マニュアルなど）に，上記の著作
       権表示，この利用条件および下記の無保証規定を掲載すること．
   (b) 利用の形態を，別に定める方法によって，上記著作権者に報告する
       こと．
 (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
     害からも，上記著作権者を免責すること．

 本ソフトウェアは，無保証で提供されているものである．上記著作権者は，
 本ソフトウェアに関して，その適用可能性も含めて，いかなる保証も行わ
 ない．また，本ソフトウェアの利用により直接的または間接的に生じたい
 かなる損害に関しても，その責任を負わない．

 @(#) $Id: m32r.txt,v 1.4 2002/04/14 15:27:12 hiro Exp $
------------------------------------------------------------------------


このドキュメントでは，TOPPERS/JSP M32R版について解説する．

================================
１． M32R ターゲット依存部の概要
================================

1.1 ターゲットシステムと開発環境

M32R環境の実行環境としては，次のものを想定している．

    ・三菱電機 M3A-2131G50 (M32102)

また開発環境として次のものを想定している．
    ・Soralis/BSD/Linux(POSIX) または 
        Microsoft Windows(win32) + cygwin 1.1.0
    ・binutils 2.11 (m32r-elf)
    ・gcc 2.95.3 (m32r-elf)

補足

TOPPERS/JSP M32Rの開発は 次の環境で行われている．

    ・Vine Linux 2.2
        (Windows XP Professional + VMWare workstation 3.0上で動作)
    ・GNU binutils-2.11.2 [m32r-elf]
    ・GNU gcc-2.95.4 20010604 (Debian prerelease)

1.2 サポートする機能の概要

    ・多重割込み
        M32R環境では割込みハンドラ起動中の多重割り込みを許可する．

	・chg_ipm
		M32R環境では，chg_ipm(割込みマスクレベルの変更)をサポートする．
		タスク内でchg_ipmを利用してマスクレベルを変更した場合，実行した
		タスクでのみ変更が有効となる (ディスパッチ時に割込みマスクを
		退避/変更する)．

1.3 TOPPERS/JSP M32R環境の制限事項

    ・vxget_tim
        M32R環境ではvxget_timをサポートしない．

    ・ena_int, dis_int
        M32R環境ではユーザによる割込み許可・禁止は行えないものとしている．
        ただしena_int/dis_intは，loc_cpu/unl_cpuの別名として存在する．

	・タイマティックは1ms
		TOPPERS/JSP M32Rでは，1msの精度でカーネルタイマを駆動する．


==========================
２．M32R環境に依存した機能
==========================

この節では，カーネルおよびシステムサービスの機能の中で，M32R環境依存の部分に
ついて解説する．

2.1 データ型

int型 および unsigned int型のサイズは32ビットである．

割込み優先度を表現する型 IPR は符号なし8ビット整数である．


==========================
３．システムに依存した機能
==========================

3.1 メモリマップ

・M3A-2131G50
    0x00000000 - 0x0000020f : ベクタテーブル, EITハンドラの一部
    0x00000210 -            : プログラムコード (外部ROM)
    0x00f00000 - 0x00f0ffff : システムスタック (内蔵RAM)
    0x01000000 - 0x017fffff : 外部SDRAM (8MB)

スタック領域は内蔵RAM領域の末尾からアドレス値が減少する方向へ進む．
データ領域は所定の領域からアドレス値が増加する方向へ確保される．

M3A-2131G50依存部では、システムスタックを除くすべてのデータを外部SDRAMに
配置することをデフォルトとしている。配置を変えるためには、M3A-2131G50用
リンカスクリプトファイル(jsp/config/m32r/m3a2131g50/m32relf.ld)を修正す
ればよい。

3.2 他のシステム/チップへのポーティング

ポーティング作業は次のステップからなる．
    ・メモリマップドレジスタのアドレス値設定
    ・タイマー値の設定
    ・RAM開始番地の設定
    ・イニシャルスタックポインタの設定

3.2.1 メモリマップドレジスタのアドレス値設定

TOPPERS/JSP M32R環境ではいくつかの制御レジスタを参照している．
これらは全てシステム依存部用ディレクトリのsys_defs.hで定義されている．
利用者は必要に応じてこれらの値を修正すること．

3.2.2 タイマー値の設定

TOPPERS/JSP M32R環境では標準で1msごとに割込みを発生させている．

割込みを発生させるまでの時間はタイマコンペアレジスタの値をマニュアルに
したがって調整することで帰ることができる．

config/v850/m3a2131g50/sys_config.h:63

	/* M3A-2131G50 66MHz で 115.2kbps */
#define SERIAL_PORT			  (CONSOLE_PORTID-1)
#define SERIAL_INT_PRIORITY   0
#define SERIAL_CLKDIV         17
#define SERIAL_CLKCMP         7

またタイムティック自体を修正する場合はsys_defs.h:142,143のTIC_NUMEおよび
TIC_DENOを修正する．それぞれは次式に従う．

タイムティック(ms) = TIC_NUME(ms) / TIC_DENO(ms)

3.2.3 RAM開始番地の設定

config/m32r/m3a2131g50/m32relf.ldのMEMORY部の内容を修正することで、メモ
リのサイズおよび位置を変えることができる。また、各セクションの末尾にある 
"> SDRAM" または "> EXTROM"を変えることで、配置する空間を変えることも可
能である。

3.2.4 イニシャルスタックポインタの設定

起動時に設定される初期スタックポインタ(割込みスタックポインタ)の番地は
config/m32r/m3a2131g50/m32relf.ld:45の__stackに記述されている．この
__stackには4バイトアラインされた値を格納する．

config/m32r/(sys)/m32relf.ld:45
	PROVIDE(__stack = 0x00f10000);

スタックはプリデクリメントスタックであるため，__stackで示されたアドレス
には何も格納されないことに注意されたい．

3.2.5 その他の設定

    ・使用するタイマユニットの番号
        config/m32r/(sys)/sys_config.h:71 TIMER_PORT宣言
            使用するタイマユニット番号を定める。デフォルトは5。標準の状
            態では、この宣言を修正するだけで、割込み番号やレジスタアドレ
            スなども修正される。

    ・コンソールに使用するUARTユニットのID
        config/m32r/(sys)/sys_config.h:60 CONSOLE_PORTID宣言
            コンソールとして使用するUARTユニットIDを指定する。UARTユニッ
            トIDは1から始まることに注意。デフォルトは1。

    ・割込み要因の最大数
        config/m32r/(sys)/sys_config.h:55 NUM_INTERRUPT宣言
            割込みベクタテーブルを作成するための割込み要因の最大数を設定
            する。デフォルトは64 (0-63)。


==================
４．開発環境の構築
==================

開発環境の構築方法については，GNU開発環境構築マニュアルを参照すること．
本CPUを識別するためのターゲット名は m32r-elf である．

==========
５．その他
==========

5.1 ディレクトリ・ファイル構成

[jsp]
  +- [doc]
  |   +- m32r.txt  : このファイル
  +- [config]
      +- [m32r]
          +- cpu_config.c    : プロセッサ依存モジュール
          +- cpu_config.h    : プロセッサ依存モジュール
          +- cpu_context.h   : タスクコンテキスト操作ルーチン
          +- cpu_defs.h      : CPU依存情報(割込み/例外番号など) 定義ファイル
          +- cpu_support.S   : CPU依存アセンブリ言語コーディング部
          +- m32rasm.inc     : アセンブラ用インクルードファイル
          +- m32relf.ld      : リンカスクリプト (M32R 汎用)
          +- Makefile.config : CPU依存Makefile
          +- makeoffset.c    : 構造体オフセット位置取得用
          +- start.S         : スタートアップ / 割込みハンドラ
          +- [m3a2131g50]
              +- hw_serial.h     : シリアル操作 (M32R内蔵非同期SIO)
              +- hw_timer.h      : タイマ操作   (M32R内蔵タイマ)
              +- m32relf.ld      : M3A-2131G50専用リンカスクリプト
              +- Makefile.config : システム依存Makefile
              +- sys_config.h    : システム依存モジュール
              +- sys_config.c    : システム依存モジュール
              +- sys_defs.h      : システム依存定義ファイル
              +- sys_support.S   : システム依存アセンブラ部


==================
６．バージョン履歴
==================

    2002年03月10日  Release 0.2
        ・クロックを66MHzに．使用タイマを0->5へ．
        ・ドキュメント整備
    2002年03月01日  Release 0.1
        ・最初のリリース
