#! /usr/bin/perl
#
#  TOPPERS/JSP Kernel
#      Toyohashi Open Platform for Embedded Real-Time Systems/
#      Just Standard Profile Kernel
# 
#  Copyright (C) 2000 by Embedded and Real-Time Systems Laboratory
#                              Toyohashi Univ. of Technology, JAPAN
# 
#  上記著作権者は，Free Software Foundation によって公表されている 
#  GNU General Public License の Version 2 に記述されている条件か，以
#  下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェア（本ソフトウェ
#  アを改変したものを含む．以下同じ）を使用・複製・改変・再配布（以下，
#  利用と呼ぶ）することを無償で許諾する．
#  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#      スコード中に含まれていること．
#  (2) 本ソフトウェアを再利用可能なバイナリコード（リロケータブルオブ
#      ジェクトファイルやライブラリなど）の形で利用する場合には，利用
#      に伴うドキュメント（利用者マニュアルなど）に，上記の著作権表示，
#      この利用条件および下記の無保証規定を掲載すること．
#  (3) 本ソフトウェアを再利用不可能なバイナリコードの形または機器に組
#      み込んだ形で利用する場合には，次のいずれかの条件を満たすこと．
#    (a) 利用に伴うドキュメント（利用者マニュアルなど）に，上記の著作
#        権表示，この利用条件および下記の無保証規定を掲載すること．
#    (b) 利用の形態を，別に定める方法によって，上記著作権者に報告する
#        こと．
#  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#      害からも，上記著作権者を免責すること．
# 
#  本ソフトウェアは，無保証で提供されているものである．上記著作権者は，
#  本ソフトウェアに関して，その適用可能性も含めて，いかなる保証も行わ
#  ない．また，本ソフトウェアの利用により直接的または間接的に生じたい
#  かなる損害に関しても，その責任を負わない．
# 
#  @(#) $Id: makedep,v 1.4 2002/04/08 05:28:34 hiro Exp $
# 

require "getopt.pl";

#  オプションの定義
#
#  -C <cc_path>	 Cコンパイラのコマンド名
#  -O <cc_opts>	 Cコンパイラ/CPPに渡すオプション
#  -S <paths>	 ソースファイルをサーチするパス（":" で区切る）
#
#  -P <cpp_path> CPPのコマンド名
#  -T <target>   ターゲットのファイル名
#  -s		 ターゲットのサフィックスを ".s" にする（デフォルトは ".o"）

#
#  オプションの処理
#
do Getopt("PCOST");

$cc_path = $opt_C;
$cc_opts = $opt_O;
@src_paths = split(/:/, $opt_S);

$suffix = $opt_s ? "s" : "o";
$cpp_path = $opt_P;
$target_file = $opt_T;

#
#  $dependlist に作られた依存関係を出力する
#
sub output_dependlist {
	local($file) = @_;
	local($column, $len);

	if ($target_file) {
		print $target_file;
		$column = length($target_file);
	}
	else {
		$file =~ s/(.*)\.(.)/$1.$suffix/;
		print $file;
		$column = length($file);
	}	
	print ": ";
	$column += 2;
    
	foreach $file (keys(%dependlist)) {
		$len = length($file) + 1;
		if ($column + $len >= 70) {
			print "\\\n\t";
			$column = 8;
		}
		$column += $len;
		print "$file ";
	}
	print "\n";
}

#
#  $file の依存関係を %dependlist に作る
#
sub makedepend_one {
	local($file) = @_;
	local($command, $input, $dir, $fullpath);

	foreach $dir (".", @src_paths) {
		if (-e $dir."/".$file) {
			$fullpath = $dir."/".$file;
			last;
		}
	}
	unless ($fullpath) {
		print STDERR "makedep: can't find $file\n";
		exit(1);
	}

	if ($cpp_path) {
		$command = "$cpp_path $cc_opts";
	}
	else {
		$command = "$cc_path -E $cc_opts";
	}
	unless (open(INPUT, "$command $fullpath |")) {
		print STDERR "makedep: can't open $fullpath\n";
		exit(1);
	}
	while ($line = <INPUT>) {
		if ($line =~ /^\#\s*([0-9]+)\s*\"([^\"]+)\"/) {
			$dependlist{$2} = 1;
		}
	}
	unless (close(INPUT)) {
		print STDERR "makedep: can't execute $command\n";
		exit(1);
	}
}

#
#  メインルーチン
#
foreach $file (@ARGV) {
	%dependlist = ();
	do makedepend_one($file);
	do output_dependlist($file) if (%dependlist);
}
