  TOPPERS/JSPカーネルSH1版
  　ターゲットシステム
  　　・京都マイクロコンピュータ(株) KZ-SH1-01
  　　・CQ出版(株) RISC評価キット SH-1
  　兼用サンプルプログラム
------------------------------------------------------------------------
 TOPPERS/JSP Kernel
     Toyohashi Open Platform for Embedded Real-Time Systems/
     Just Standard Profile Kernel

 Copyright (C) 2000,2001 by Embedded and Real-Time Systems Laboratory
                             Toyohashi Univ. of Technology, JAPAN
 Copyright (C) 2001 by Industrial Technology Institute,
                             Miyagi Prefectural Government, JAPAN

 上記著作権者は，以下の条件を満たす場合に限り，本ソフトウェア（本ソ
 フトウェアを改変したものを含む．以下同じ）を使用・複製・改変・再配
 布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
     権表示，この利用条件および下記の無保証規定が，そのままの形でソー
     スコード中に含まれていること．
 (2) 本ソフトウェアをバイナリコードの形または機器に組み込んだ形で利
     用する場合には，次のいずれかの条件を満たすこと．
   (a) 利用に伴うドキュメント（利用者マニュアルなど）に，上記の著作
       権表示，この利用条件および下記の無保証規定を掲載すること．
   (b) 利用の形態を，別に定める方法によって，上記著作権者に報告する
       こと．
 (3) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
     害からも，上記著作権者を免責すること．

 本ソフトウェアは，無保証で提供されているものである．上記著作権者は，
 本ソフトウェアに関して，その適用可能性も含めて，いかなる保証も行わ
 ない．また，本ソフトウェアの利用により直接的または間接的に生じたい
 かなる損害に関しても，その責任を負わない．

 @(#) $Id: README,v 1.1 2001/05/04 09:03:11 imai Exp $
------------------------------------------------------------------------

JSPカーネルの基本的な動作を確認するためのサンプルプログラム．

プログラムの概要:

ユーザインタフェースを受け持つメインタスク（タスクID: MAIN_TASK，
優先度: MAIN_PRIORITY）と，三つの並列実行されるタスク（タスクID:
TASK1〜TASK3，初期優先度: MID_PRIORITY）で構成される．また，起動周
期が2秒の周期ハンドラ（周期ハンドラID: CYCHDR1）を用いる．

並列実行されるタスクは，TASK_LOOP 回空ループを実行する度に，タスク
が実行中であることをあらわすメッセージを表示する．

周期ハンドラは，三つの優先度（HIGH_PRIORITY，MID_PRIORITY，
LOW_PRIORITY）のレディキューを回転させる．プログラムの起動直後は，
周期ハンドラは停止状態になっている．

メインタスクは，シリアルI/Oポートからの文字入力を行い（文字入力を
待っている間は，並列実行されるタスクが実行されている），入力された
文字に対応した処理を実行する．入力された文字と処理の関係は次の通り．
Control-C または 'Q' が入力されると，プログラムを終了する．

'1' : 以降のコマンドは TASK1 に対して行う．
'2' : 以降のコマンドは TASK2 に対して行う．
'3' : 以降のコマンドは TASK3 に対して行う．
'a' : タスクを act_tsk により起動する．
'A' : タスクに対する起動要求を can_act によりキャンセルする．
'e' : タスクに ext_tsk を呼び出させ，終了させる．
't' : タスクを ter_tsk により強制終了する．
'>' : タスクの優先度を HIGH_PRIORITY にする．
'=' : タスクの優先度を MID_PRIORITY にする．
'<' : タスクの優先度を LOW_PRIORITY にする．
'G' : タスクの優先度を get_pri で読み出す．
's' : タスクに slp_tsk を呼び出させ，起床待ちにさせる．
'S' : タスクに tslp_tsk(10秒) を呼び出させ，起床待ちにさせる．
'w' : タスクを wup_tsk により起床する．
'W' : タスクに対する起床要求を can_wup によりキャンセルする．
'l' : タスクを rel_wai により強制的に待ち解除にする．
'u' : タスクを sus_tsk により強制待ち状態にする．
'm' : タスクの強制待ち状態を rsm_tsk により解除する．
'M' : タスクの強制待ち状態を frsm_tsk により強制解除する．
'd' : タスクに dly_tsk(10秒) を呼び出させ，時間経過待ちにさせる．
'x' : タスクにパターン 0x0001 の例外処理を要求する．
'X' : タスクにパターン 0x0002 の例外処理を要求する．
'r' : 三つの優先度（HIGH_PRIORITY，MID_PRIORITY，LOW_PRIORITY）の
      レディキューを回転させる．
'c' : 周期ハンドラを動作させる．
'C' : 周期ハンドラを停止させる．
'V' : vxget_tim で性能評価用システム時刻を2回読む．
'v' : 発行したシステムコールを表示する．
'q' : 発行したシステムコールを表示しない（デフォルト）．



共通の注意事項
　出来上がったプログラムは、奇数バイトと偶数バイトに分離して、
　2つのROMに書き込む。
　使用するROMのサイズに合わせて、ジャンパピンの設定を行う。
　サンプルプログラムのメモリマッピングでは
　　1Kビット×2個
　の構成になっている。
　メモリマッピングは以下のコマンドで調べられる。
　  sh-hitachi-elf-objdump -h jsp

　メモリマッピングの設定についてはマニュアルsh1.txtを参照


京都マイクロコンピュータ(株) KZ-SH1-01を用いる場合の注意
　シリアルポート周りの部品が実装されていないので、各自で実装する。
　　・シリアルポートコネクタ
　　・RS232C用レベルコンバータとその周辺に接続するチップコンデンサ
　　　ちなみに「CQ出版(株) RISC評価キット SH-1」では、
　　　　MAXIM MAX202ECWE
　　　が実装されている。


CQ出版(株) RISC評価キット SH-1を用いる場合の注意
　キットに付属するROMモニタは用いないでサンプルソフト単体で使用する。
　つまり、モニタプログラムが入っているROMを外して、サンプルプログラム
　を書き込んだROMに置き換える。
　このボードはデフォルトの設定（8ビットバス、ROM1個）では、アドレス
　バスの接続がシフトされている。そのため、ROMのアドレスと実アドレスが
　一致しない。付属のROMモニタ以外のユーザープログラムをROM化する場合
　は、アドレスバスの設定を16ビット（ROM2個）に変更する必要がある。
　（CQ出版のマニュアルp17を参照）



