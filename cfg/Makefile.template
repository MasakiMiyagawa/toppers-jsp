#
#  TOPPERS/JSP Kernel
#      Toyohashi Open Platform for Embedded Real-Time Systems/
#      Just Standard Profile Kernel
# 
#  Copyright (C) 2000,2001 by Embedded and Real-Time Systems Laboratory
#                              Toyohashi Univ. of Technology, JAPAN
# 
#  上記著作権者は，Free Software Foundation によって公表されている 
#  GNU General Public License の Version 2 に記述されている条件か，以
#  下の条件のいずれかを満たす場合に限り，本ソフトウェア（本ソフトウェ
#  アを改変したものを含む．以下同じ）を使用・複製・改変・再配布（以下，
#  利用と呼ぶ）することを無償で許諾する．
#  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#      スコード中に含まれていること．
#  (2) 本ソフトウェアを再利用可能なバイナリコード（リロケータブルオブ
#      ジェクトファイルやライブラリなど）の形で利用する場合には，利用
#      に伴うドキュメント（利用者マニュアルなど）に，上記の著作権表示，
#      この利用条件および下記の無保証規定を掲載すること．
#  (3) 本ソフトウェアを再利用不可能なバイナリコードの形または機器に組
#      み込んだ形で利用する場合には，次のいずれかの条件を満たすこと．
#    (a) 利用に伴うドキュメント（利用者マニュアルなど）に，上記の著作
#        権表示，この利用条件および下記の無保証規定を掲載すること．
#    (b) 利用の形態を，別に定める方法によって，上記著作権者に報告する
#        こと．
#  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#      害からも，上記著作権者を免責すること．
# 
#  本ソフトウェアは，無保証で提供されているものである．上記著作権者は，
#  本ソフトウェアに関して，その適用可能性も含めて，いかなる保証も行わ
#  ない．また，本ソフトウェアの利用により直接的または間接的に生じたい
#  かなる損害に関しても，その責任を負わない．
# 
#  @(#) $Id: Makefile.template,v 1.4 2001/11/12 13:58:44 hiro Exp $
#

#
#  ソースファイルのディレクトリの定義
#
#  TOPPERS/JSPのソースがあるディレクトリを指定する．
#
JSPDIR = @(JSPABSDIR)

#
#  ターゲット名の定義
#
CPU = @(CPU)
SYS = @(SYS)

#
#  ターゲット依存の定義のインクルード
#
-include $(JSPDIR)/config/$(CPU)/Makefile.config
ifdef SYS
    -include $(JSPDIR)/config/$(CPU)/$(SYS)/Makefile.config
endif

#
#  ツールのディレクトリの定義
#
#  binutils等のツールがあるディレクトリを指定する．
#
PREFIX = @(PREFIX)

#
#  コマンド名，コンパイルオプションの定義
#
AR       = ar
RANLIB   = ranlib
CC       = g++
CFLAGS   = -O2 -Wall

#
#  BFDをリンクするための設定
#
ifdef TARGET
    TARGET_PREFIX = $(TARGET)-
    INCLUDE = -I$(PREFIX)/$(TARGET)/bfd -I$(JSPDIR) -I.
    LIBDIR = -L$(PREFIX)/$(TARGET)/bfd

    LIBBFD = $(PREFIX)/$(TARGET)/bfd/libbfd.a
    LIBIBERTY = $(PREFIX)/$(TARGET)/bfd/libiberty.a
else
    TARGET_PREFIX = 
    INCLUDE = -I$(JSPDIR) -I.
    LIBDIR = 

    LIBBFD = /usr/lib/libbfd.a
    LIBIBERTY = /usr/lib/libiberty.a
endif

#
#  オブジェクトファイル名，ヘッダファイル名の定義
#

COMMONOBS = garbage.o message.o exception.o
COMMONHDR = garbage.h message.h exception.h

CFGOBS    = domain.o manager.o id.o multistream.o value.o staticapi.o \
		serializer.o parser.o configurator.o
CFGHDR    = domain.h manager.h id.h multistream.h value.h staticapi.h \
		serializer.h parser.h
CFGSRC    = jsp/toppers.cpp

CHK       = $(TARGET_PREFIX)chk
CHKOBS    = filecontainer.o chk-top.o fc_bfd.o
CHKHDR    = filecontainer.h
CHKSRC    = jsp/chk_jsp.cpp

##############################################################################

all: cfg $(CHK)

clean:
	rm -f *.o

realclean: clean
	rm -f cfg chk *-chk

cfg: $(CFGSRC) $(CFGOBS) $(COMMONOBS) Makefile.template
	$(CC) $(CFLAGS) -o cfg $(CFGSRC) $(CFGOBS) $(COMMONOBS)

$(CHK): $(CHKSRC) $(CHKOBS) $(COMMONOBS) $(LIBBFD) $(LIBIBERTY) \
		Makefile.template
	$(CC) $(CFLAGS) $(INCLUDE) -o $(CHK) $(CHKSRC) \
		$(CHKOBS) $(COMMONOBS) $(LIBDIR) -lbfd -liberty

$(CHKOBS): $(CHKHDR)
	$(CC) $(CFLAGS) $(INCLUDE) -c $(@:.o=.cpp)

$(CFGOBS): $(CFGHDR)
	$(CC) $(CFLAGS) -c $(@:.o=.cpp)

$(COMMONOBS): $(COMMONHDR)
	$(CC) $(CFLAGS) -c $(@:.o=.cpp)
