/*
 *  Toppers/JSP Kernel
 *      Toyohashi Open Platform for Embedded Real-Time Systems/
 *      Just Standard Profile Kernel
 * 
 *  Copyright (C) 2000 by Embedded and Real-Time Systems Laboratory
 *                              Toyohashi Univ. of Technology, JAPAN
 * 
 *  上記著作権者は，以下の条件を満たす場合に限り，本ソフトウェア（本ソ
 *  フトウェアを改変したものを含む．以下同じ）を使用・複製・改変・再配
 *  布（以下，利用と呼ぶ）することを無償で許諾する．
 *  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *      スコード中に含まれていること．
 *  (2) 本ソフトウェアをバイナリコードの形または機器に組み込んだ形で利
 *      用する場合には，次のいずれかの条件を満たすこと．
 *    (a) 利用に伴うドキュメント（利用者マニュアルなど）に，上記の著作
 *        権表示，この利用条件および下記の無保証規定を掲載すること．
 *    (b) 利用の形態を，別に定める方法によって，上記著作権者に報告する
 *        こと．
 *  (3) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *      害からも，上記著作権者を免責すること．
 * 
 *  本ソフトウェアは，無保証で提供されているものである．上記著作権者は，
 *  本ソフトウェアに関して，その適用可能性も含めて，いかなる保証も行わ
 *  ない．また，本ソフトウェアの利用により直接的または間接的に生じたい
 *  かなる損害に関しても，その責任を負わない．
 * 
 *  @(#) $Id: configurator.cpp,v 1.7 2001/05/07 07:23:44 takayuki Exp $
 */

// Configurator.cpp : コンソール アプリケーション用のエントリ ポイントの定義
//

#define APPNAME "Configurator"

#include "manager.h"
#include "simpleparser.h"
#include "exception.h"
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[])
{
	Manager mainapp(new SimpleParser);
	char * sourcefilename = NULL;
	int i;
	
	for(i=1;i<argc;i++)
	{
		if( *(argv[i]) == '-')
		{
			switch(*(argv[i]+1))
			{
			case 'O':
				mainapp.SetOption(Manager::CREATEORTIFILE);
				break;

			case '-':
				if( strcmp(argv[i]+2, "odl") == 0)
				{
					mainapp.SetOption(Manager::CREATEORTIFILE);
					break;
				}
				
			default:
				fprintf(stderr, MSG_UNKNOWNOPTION "\n", argv[i]);	
				return EXIT_FAILURE;
			}
		}else
		{
			if(sourcefilename == NULL)
				sourcefilename = argv[i];
			else{
				fputs(MSG_ALREADYGIVENSRCFILE "\n",stderr);
				return EXIT_FAILURE;
			}
		}
	}

	try
	{
		mainapp.Body(sourcefilename);
	}
	catch(Exception e)
	{
		fputs("Program was aborted with fatal errors\n",stderr);
		fputs(e,stderr);
		fputc('\n',stderr);
	}
	return EXIT_SUCCESS;
}
